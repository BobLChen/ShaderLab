#extension GL_ARB_shader_texture_lod : require
vec4 xll_tex2Dgrad(sampler2D s, vec2 coord, vec2 ddx, vec2 ddy) {
   return texture2DGradARB( s, coord, ddx, ddy);
}
#line 6
struct v2f {
    vec4 pos;
    vec2 uv;
};
#line 2
struct u2v {
    vec4 vertex;
    vec2 texcoord;
};
uniform sampler2D _MainTex;
#line 10
#line 16
vec4 xlat_main( in v2f i ) {
    vec2 a = i.uv;
    #line 18
    bvec2 b = bvec2(step( vec2( 0.5), a));
    vec2 c = vec2( 0.0, 0.0);
    if (b.x){
        c.x = a.x;
    }
    if (b.y){
        c.y = a.y;
    }
    #line 22
    vec4 col = xll_tex2Dgrad( _MainTex, i.uv, vec2( (i.uv.x * 0.05)), vec2( (i.uv.y * 0.05)));
    return vec4( c, col.z, 1.0);
}
varying vec2 xlv_TEXCOORD0;
void main() {
    vec4 xl_retval;
    v2f xlt_i;
    xlt_i.pos = vec4(0.0);
    xlt_i.uv = vec2(xlv_TEXCOORD0);
    xl_retval = xlat_main( xlt_i);
    gl_FragData[0] = vec4(xl_retval);
}

// uniforms:
// _MainTex:<none> type 25 arrsize 0
