float xll_saturate_f( float x) {
  return clamp( x, 0.0, 1.0);
}
vec2 xll_saturate_vf2( vec2 x) {
  return clamp( x, 0.0, 1.0);
}
vec3 xll_saturate_vf3( vec3 x) {
  return clamp( x, 0.0, 1.0);
}
vec4 xll_saturate_vf4( vec4 x) {
  return clamp( x, 0.0, 1.0);
}
mat2 xll_saturate_mf2x2(mat2 m) {
  return mat2( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0));
}
mat3 xll_saturate_mf3x3(mat3 m) {
  return mat3( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0));
}
mat4 xll_saturate_mf4x4(mat4 m) {
  return mat4( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0), clamp(m[3], 0.0, 1.0));
}
#line 73
struct v2f {
    highp vec4 pos;
    highp vec4 normalInterpolator;
    highp vec4 viewInterpolator;
    highp vec4 bumpCoords;
    highp vec4 screenPos;
    highp vec4 grabPassPos;
};
uniform highp vec4 _ProjectionParams;
uniform highp vec4 _ScreenParams;
#line 3
uniform highp vec4 _ZBufferParams;
#line 12
#line 18
#line 44
#line 61
#line 83
uniform sampler2D _BumpMap;
uniform sampler2D _ReflectionTex;
uniform sampler2D _RefractionTex;
uniform sampler2D _ShoreTex;
#line 87
uniform sampler2D _CameraDepthTexture;
uniform highp vec4 _RefrColorDepth;
uniform highp vec4 _SpecularColor;
uniform highp vec4 _BaseColor;
#line 91
uniform highp vec4 _ReflectionColor;
uniform highp vec4 _InvFadeParemeter;
uniform highp float _Shininess;
uniform highp vec4 _WorldLightDir;
#line 95
uniform highp vec4 _DistortParams;
uniform highp float _FresnelScale;
uniform highp vec4 _BumpTiling;
uniform highp vec4 _BumpDirection;
#line 99
uniform highp vec4 _Foam;
#line 68
mediump vec4 ExtinctColor( in mediump vec4 baseColor, in mediump float extinctionAmount ) {
    #line 70
    return (baseColor - (extinctionAmount * vec4( 0.15, 0.03, 0.01, 0.0)));
}
#line 50
mediump vec4 Foam( in sampler2D shoreTex, in mediump vec4 coords ) {
    #line 52
    mediump vec4 foam = ((texture( shoreTex, coords.xy) * texture( shoreTex, coords.zw)) - 0.125);
    return foam;
}
#line 55
mediump float Fresnel( in mediump vec3 viewVector, in mediump vec3 worldNormal, in mediump float bias, in mediump float power ) {
    #line 57
    mediump float facing = clamp( (1.0 - max( dot( (-viewVector), worldNormal), 0.0)), 0.0, 1.0);
    mediump float refl2Refr = xll_saturate_f((bias + ((1.0 - bias) * pow( facing, power))));
    return refl2Refr;
}
#line 12
highp float LinearEyeDepth( in highp float z ) {
    return (1.0 / ((_ZBufferParams.z * z) + _ZBufferParams.w));
}
#line 18
mediump vec3 PerPixelNormal( in sampler2D bumpMap, in mediump vec4 coords, in mediump vec3 vertexNormal, in mediump float bumpStrength ) {
    mediump vec4 bump = (texture( bumpMap, coords.xy) + texture( bumpMap, coords.zw));
    bump.xy = (bump.wy - vec2( 1.0, 1.0));
    #line 22
    mediump vec3 worldNormal = (vertexNormal + ((bump.xxy * bumpStrength) * vec3( 1.0, 0.0, 1.0)));
    return normalize(worldNormal);
}
#line 101
mediump vec4 xlat_main( in v2f i ) {
    #line 103
    mediump vec3 worldNormal = PerPixelNormal( _BumpMap, i.bumpCoords, i.normalInterpolator.xyz, _DistortParams.x);
    mediump vec3 viewVector = normalize(i.viewInterpolator.xyz);
    mediump vec4 distortOffset = vec4( ((worldNormal.xz * _DistortParams.y) * 10.0), 0.0, 0.0);
    mediump vec4 screenWithOffset = (i.screenPos + distortOffset);
    #line 107
    mediump vec4 grabWithOffset = (i.grabPassPos + distortOffset);
    mediump vec4 rtRefractionsNoDistort = textureProj( _RefractionTex, i.grabPassPos);
    mediump float refrFix = textureProj( _CameraDepthTexture, grabWithOffset).x;
    mediump vec4 rtRefractions = textureProj( _RefractionTex, grabWithOffset);
    #line 111
    mediump vec4 rtReflections = textureProj( _ReflectionTex, screenWithOffset);
    if ((LinearEyeDepth( refrFix) < i.screenPos.z)){
        rtRefractions = rtRefractionsNoDistort;
    }
    mediump vec3 reflectVector = normalize(reflect( viewVector, worldNormal));
    mediump vec3 h = normalize((_WorldLightDir.xyz + viewVector.xyz));
    #line 115
    highp float nh = max( 0.0, dot( worldNormal, (-h)));
    highp float spec = max( 0.0, pow( nh, _Shininess));
    mediump vec4 edgeBlendFactors = vec4( 1.0, 0.0, 0.0, 0.0);
    mediump float depth = textureProj( _CameraDepthTexture, i.screenPos).x;
    #line 119
    depth = LinearEyeDepth( depth);
    edgeBlendFactors = xll_saturate_vf4((_InvFadeParemeter * (depth - i.screenPos.w)));
    edgeBlendFactors.y = (1.0 - edgeBlendFactors.y);
    worldNormal.xz *= _FresnelScale;
    #line 123
    mediump float refl2Refr = Fresnel( viewVector, worldNormal, _DistortParams.w, _DistortParams.z);
    mediump vec4 baseColor = ExtinctColor( _BaseColor, (i.viewInterpolator.w * _InvFadeParemeter.w));
    mediump vec4 reflectionColor = mix( rtReflections, _ReflectionColor, vec4( _ReflectionColor.w));
    baseColor = mix( mix( rtRefractions, baseColor, vec4( baseColor.w)), reflectionColor, vec4( refl2Refr));
    #line 127
    baseColor = (baseColor + (spec * _SpecularColor));
    mediump vec4 foam = Foam( _ShoreTex, (i.bumpCoords * 2.0));
    baseColor.xyz += ((foam.xyz * _Foam.x) * (edgeBlendFactors.y + xll_saturate_f((i.viewInterpolator.w - _Foam.y))));
    baseColor.w = edgeBlendFactors.x;
    #line 131
    return baseColor;
}
in highp vec4 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
void main() {
    mediump vec4 xl_retval;
    v2f xlt_i;
    xlt_i.pos = vec4(0.0);
    xlt_i.normalInterpolator = vec4(xlv_TEXCOORD0);
    xlt_i.viewInterpolator = vec4(xlv_TEXCOORD1);
    xlt_i.bumpCoords = vec4(xlv_TEXCOORD2);
    xlt_i.screenPos = vec4(xlv_TEXCOORD3);
    xlt_i.grabPassPos = vec4(xlv_TEXCOORD4);
    xl_retval = xlat_main( xlt_i);
    gl_FragData[0] = vec4(xl_retval);
}

// uniforms:
// _BaseColor:<none> type 12 arrsize 0
// _BumpMap:<none> type 25 arrsize 0
// _CameraDepthTexture:<none> type 25 arrsize 0
// _DistortParams:<none> type 12 arrsize 0
// _Foam:<none> type 12 arrsize 0
// _FresnelScale:<none> type 9 arrsize 0
// _InvFadeParemeter:<none> type 12 arrsize 0
// _ReflectionColor:<none> type 12 arrsize 0
// _ReflectionTex:<none> type 25 arrsize 0
// _RefractionTex:<none> type 25 arrsize 0
// _Shininess:<none> type 9 arrsize 0
// _ShoreTex:<none> type 25 arrsize 0
// _SpecularColor:<none> type 12 arrsize 0
// _WorldLightDir:<none> type 12 arrsize 0
// _ZBufferParams:<none> type 12 arrsize 0
