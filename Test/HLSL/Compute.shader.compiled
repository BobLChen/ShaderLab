{
    "fallbackName": "",
    "shaderName": "Test/Compute",
    "subShaders": [
        {
            "lod": 0,
            "passes": [
                {
                    "errorMsg": "",
                    "programs": [
                        {
                            "data": "#version 460\nlayout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;\n\nlayout(binding = 0, rgba32f) uniform writeonly image2D Result;\nuniform sampler2D SPIRV_Cross_CombinedInputBufSPIRV_Cross_DummySampler;\n\nshared uint CacheR[128];\nshared uint CacheG[128];\nshared uint CacheB[128];\n\nvoid main()\n{\n    uint _76 = gl_LocalInvocationID.y << 4u;\n    int _78 = int(gl_LocalInvocationID.x + _76);\n    uint _79 = uint(_78);\n    uvec2 _80 = uvec2(ivec2((gl_LocalInvocationID.xy << (uvec2(1u) & uvec2(31u))) + uvec2(ivec2((gl_WorkGroupID.xy << (uvec2(3u) & uvec2(31u))) - uvec2(4u)))));\n    vec4 _82 = texelFetch(SPIRV_Cross_CombinedInputBufSPIRV_Cross_DummySampler, ivec2(_80), int(0u));\n    vec4 _84 = texelFetch(SPIRV_Cross_CombinedInputBufSPIRV_Cross_DummySampler, ivec2(_80 + uvec2(1u, 0u)), int(0u));\n    CacheR[_79] = packHalf2x16(vec2(_82.x, 0.0)) | (packHalf2x16(vec2(_84.x, 0.0)) << 16u);\n    CacheG[_79] = packHalf2x16(vec2(_82.y, 0.0)) | (packHalf2x16(vec2(_84.y, 0.0)) << 16u);\n    CacheB[_79] = packHalf2x16(vec2(_82.z, 0.0)) | (packHalf2x16(vec2(_84.z, 0.0)) << 16u);\n    uint _113 = uint(_78 + 8);\n    vec4 _115 = texelFetch(SPIRV_Cross_CombinedInputBufSPIRV_Cross_DummySampler, ivec2(_80 + uvec2(0u, 1u)), int(0u));\n    vec4 _117 = texelFetch(SPIRV_Cross_CombinedInputBufSPIRV_Cross_DummySampler, ivec2(_80 + uvec2(1u)), int(0u));\n    CacheR[_113] = packHalf2x16(vec2(_115.x, 0.0)) | (packHalf2x16(vec2(_117.x, 0.0)) << 16u);\n    CacheG[_113] = packHalf2x16(vec2(_115.y, 0.0)) | (packHalf2x16(vec2(_117.y, 0.0)) << 16u);\n    CacheB[_113] = packHalf2x16(vec2(_115.z, 0.0)) | (packHalf2x16(vec2(_117.z, 0.0)) << 16u);\n    barrier();\n    uint _146 = _76 + (gl_LocalInvocationID.x << 1u);\n    uint _149 = (_76 + gl_LocalInvocationID.x) + (gl_LocalInvocationID.x & 4u);\n    uint _151 = CacheR[_149];\n    uint _153 = CacheG[_149];\n    uint _155 = CacheB[_149];\n    vec3 _172 = vec3(unpackHalf2x16(_151 >> 16u).x, unpackHalf2x16(_153 >> 16u).x, unpackHalf2x16(_155 >> 16u).x);\n    uint _173 = _149 + 1u;\n    uint _175 = CacheR[_173];\n    uint _177 = CacheG[_173];\n    uint _179 = CacheB[_173];\n    vec3 _186 = vec3(unpackHalf2x16(_175).x, unpackHalf2x16(_177).x, unpackHalf2x16(_179).x);\n    vec3 _196 = vec3(unpackHalf2x16(_175 >> 16u).x, unpackHalf2x16(_177 >> 16u).x, unpackHalf2x16(_179 >> 16u).x);\n    uint _197 = _149 + 2u;\n    uint _199 = CacheR[_197];\n    uint _201 = CacheG[_197];\n    uint _203 = CacheB[_197];\n    vec3 _210 = vec3(unpackHalf2x16(_199).x, unpackHalf2x16(_201).x, unpackHalf2x16(_203).x);\n    vec3 _220 = vec3(unpackHalf2x16(_199 >> 16u).x, unpackHalf2x16(_201 >> 16u).x, unpackHalf2x16(_203 >> 16u).x);\n    uint _221 = _149 + 3u;\n    uint _223 = CacheR[_221];\n    uint _225 = CacheG[_221];\n    uint _227 = CacheB[_221];\n    vec3 _234 = vec3(unpackHalf2x16(_223).x, unpackHalf2x16(_225).x, unpackHalf2x16(_227).x);\n    vec3 _244 = vec3(unpackHalf2x16(_223 >> 16u).x, unpackHalf2x16(_225 >> 16u).x, unpackHalf2x16(_227 >> 16u).x);\n    uint _245 = _149 + 4u;\n    uint _247 = CacheR[_245];\n    uint _249 = CacheG[_245];\n    uint _251 = CacheB[_245];\n    vec3 _258 = vec3(unpackHalf2x16(_247).x, unpackHalf2x16(_249).x, unpackHalf2x16(_251).x);\n    vec3 _281 = ((((_210 * 0.2734375) + ((_196 + _220) * 0.21875)) + ((_186 + _234) * 0.109375)) + ((_172 + _244) * 0.03125)) + ((vec3(unpackHalf2x16(_151).x, unpackHalf2x16(_153).x, unpackHalf2x16(_155).x) + _258) * 0.00390625);\n    CacheR[_146] = floatBitsToUint(_281.x);\n    CacheG[_146] = floatBitsToUint(_281.y);\n    CacheB[_146] = floatBitsToUint(_281.z);\n    uint _291 = _146 + 1u;\n    vec3 _304 = ((((_220 * 0.2734375) + ((_210 + _234) * 0.21875)) + ((_196 + _244) * 0.109375)) + ((_186 + _258) * 0.03125)) + ((_172 + vec3(unpackHalf2x16(_247 >> 16u).x, unpackHalf2x16(_249 >> 16u).x, unpackHalf2x16(_251 >> 16u).x)) * 0.00390625);\n    CacheR[_291] = floatBitsToUint(_304.x);\n    CacheG[_291] = floatBitsToUint(_304.y);\n    CacheB[_291] = floatBitsToUint(_304.z);\n    barrier();\n    uint _316 = (gl_LocalInvocationID.y << 3u) + gl_LocalInvocationID.x;\n    uint _325 = _316 + 8u;\n    uint _334 = _316 + 16u;\n    uint _343 = _316 + 24u;\n    uint _352 = _316 + 32u;\n    uint _361 = _316 + 40u;\n    uint _370 = _316 + 48u;\n    uint _379 = _316 + 56u;\n    uint _388 = _316 + 64u;\n    imageStore(Result, ivec2(gl_GlobalInvocationID.xy), (((((uintBitsToFloat(uvec3(CacheR[_352], CacheG[_352], CacheB[_352])) * 0.2734375) + ((uintBitsToFloat(uvec3(CacheR[_343], CacheG[_343], CacheB[_343])) + uintBitsToFloat(uvec3(CacheR[_361], CacheG[_361], CacheB[_361]))) * 0.21875)) + ((uintBitsToFloat(uvec3(CacheR[_334], CacheG[_334], CacheB[_334])) + uintBitsToFloat(uvec3(CacheR[_370], CacheG[_370], CacheB[_370]))) * 0.109375)) + ((uintBitsToFloat(uvec3(CacheR[_325], CacheG[_325], CacheB[_325])) + uintBitsToFloat(uvec3(CacheR[_379], CacheG[_379], CacheB[_379]))) * 0.03125)) + ((uintBitsToFloat(uvec3(CacheR[_316], CacheG[_316], CacheB[_316])) + uintBitsToFloat(uvec3(CacheR[_388], CacheG[_388], CacheB[_388]))) * 0.00390625)).xyzz);\n}\n\n",
                            "encode": "string",
                            "entryPoint": "main",
                            "shaderStage": "compute",
                            "shaderTarget": "opengl"
                        },
                        {
                            "data": "#version 320 es\nlayout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;\n\nlayout(binding = 0, rgba32f) uniform writeonly highp image2D Result;\nuniform highp sampler2D SPIRV_Cross_CombinedInputBufSPIRV_Cross_DummySampler;\n\nshared uint CacheR[128];\nshared uint CacheG[128];\nshared uint CacheB[128];\n\nvoid main()\n{\n    uint _76 = gl_LocalInvocationID.y << 4u;\n    int _78 = int(gl_LocalInvocationID.x + _76);\n    uint _79 = uint(_78);\n    uvec2 _80 = uvec2(ivec2((gl_LocalInvocationID.xy << (uvec2(1u) & uvec2(31u))) + uvec2(ivec2((gl_WorkGroupID.xy << (uvec2(3u) & uvec2(31u))) - uvec2(4u)))));\n    vec4 _82 = texelFetch(SPIRV_Cross_CombinedInputBufSPIRV_Cross_DummySampler, ivec2(_80), int(0u));\n    vec4 _84 = texelFetch(SPIRV_Cross_CombinedInputBufSPIRV_Cross_DummySampler, ivec2(_80 + uvec2(1u, 0u)), int(0u));\n    CacheR[_79] = packHalf2x16(vec2(_82.x, 0.0)) | (packHalf2x16(vec2(_84.x, 0.0)) << 16u);\n    CacheG[_79] = packHalf2x16(vec2(_82.y, 0.0)) | (packHalf2x16(vec2(_84.y, 0.0)) << 16u);\n    CacheB[_79] = packHalf2x16(vec2(_82.z, 0.0)) | (packHalf2x16(vec2(_84.z, 0.0)) << 16u);\n    uint _113 = uint(_78 + 8);\n    vec4 _115 = texelFetch(SPIRV_Cross_CombinedInputBufSPIRV_Cross_DummySampler, ivec2(_80 + uvec2(0u, 1u)), int(0u));\n    vec4 _117 = texelFetch(SPIRV_Cross_CombinedInputBufSPIRV_Cross_DummySampler, ivec2(_80 + uvec2(1u)), int(0u));\n    CacheR[_113] = packHalf2x16(vec2(_115.x, 0.0)) | (packHalf2x16(vec2(_117.x, 0.0)) << 16u);\n    CacheG[_113] = packHalf2x16(vec2(_115.y, 0.0)) | (packHalf2x16(vec2(_117.y, 0.0)) << 16u);\n    CacheB[_113] = packHalf2x16(vec2(_115.z, 0.0)) | (packHalf2x16(vec2(_117.z, 0.0)) << 16u);\n    barrier();\n    uint _146 = _76 + (gl_LocalInvocationID.x << 1u);\n    uint _149 = (_76 + gl_LocalInvocationID.x) + (gl_LocalInvocationID.x & 4u);\n    uint _151 = CacheR[_149];\n    uint _153 = CacheG[_149];\n    uint _155 = CacheB[_149];\n    vec3 _172 = vec3(unpackHalf2x16(_151 >> 16u).x, unpackHalf2x16(_153 >> 16u).x, unpackHalf2x16(_155 >> 16u).x);\n    uint _173 = _149 + 1u;\n    uint _175 = CacheR[_173];\n    uint _177 = CacheG[_173];\n    uint _179 = CacheB[_173];\n    vec3 _186 = vec3(unpackHalf2x16(_175).x, unpackHalf2x16(_177).x, unpackHalf2x16(_179).x);\n    vec3 _196 = vec3(unpackHalf2x16(_175 >> 16u).x, unpackHalf2x16(_177 >> 16u).x, unpackHalf2x16(_179 >> 16u).x);\n    uint _197 = _149 + 2u;\n    uint _199 = CacheR[_197];\n    uint _201 = CacheG[_197];\n    uint _203 = CacheB[_197];\n    vec3 _210 = vec3(unpackHalf2x16(_199).x, unpackHalf2x16(_201).x, unpackHalf2x16(_203).x);\n    vec3 _220 = vec3(unpackHalf2x16(_199 >> 16u).x, unpackHalf2x16(_201 >> 16u).x, unpackHalf2x16(_203 >> 16u).x);\n    uint _221 = _149 + 3u;\n    uint _223 = CacheR[_221];\n    uint _225 = CacheG[_221];\n    uint _227 = CacheB[_221];\n    vec3 _234 = vec3(unpackHalf2x16(_223).x, unpackHalf2x16(_225).x, unpackHalf2x16(_227).x);\n    vec3 _244 = vec3(unpackHalf2x16(_223 >> 16u).x, unpackHalf2x16(_225 >> 16u).x, unpackHalf2x16(_227 >> 16u).x);\n    uint _245 = _149 + 4u;\n    uint _247 = CacheR[_245];\n    uint _249 = CacheG[_245];\n    uint _251 = CacheB[_245];\n    vec3 _258 = vec3(unpackHalf2x16(_247).x, unpackHalf2x16(_249).x, unpackHalf2x16(_251).x);\n    vec3 _281 = ((((_210 * 0.2734375) + ((_196 + _220) * 0.21875)) + ((_186 + _234) * 0.109375)) + ((_172 + _244) * 0.03125)) + ((vec3(unpackHalf2x16(_151).x, unpackHalf2x16(_153).x, unpackHalf2x16(_155).x) + _258) * 0.00390625);\n    CacheR[_146] = floatBitsToUint(_281.x);\n    CacheG[_146] = floatBitsToUint(_281.y);\n    CacheB[_146] = floatBitsToUint(_281.z);\n    uint _291 = _146 + 1u;\n    vec3 _304 = ((((_220 * 0.2734375) + ((_210 + _234) * 0.21875)) + ((_196 + _244) * 0.109375)) + ((_186 + _258) * 0.03125)) + ((_172 + vec3(unpackHalf2x16(_247 >> 16u).x, unpackHalf2x16(_249 >> 16u).x, unpackHalf2x16(_251 >> 16u).x)) * 0.00390625);\n    CacheR[_291] = floatBitsToUint(_304.x);\n    CacheG[_291] = floatBitsToUint(_304.y);\n    CacheB[_291] = floatBitsToUint(_304.z);\n    barrier();\n    uint _316 = (gl_LocalInvocationID.y << 3u) + gl_LocalInvocationID.x;\n    uint _325 = _316 + 8u;\n    uint _334 = _316 + 16u;\n    uint _343 = _316 + 24u;\n    uint _352 = _316 + 32u;\n    uint _361 = _316 + 40u;\n    uint _370 = _316 + 48u;\n    uint _379 = _316 + 56u;\n    uint _388 = _316 + 64u;\n    imageStore(Result, ivec2(gl_GlobalInvocationID.xy), (((((uintBitsToFloat(uvec3(CacheR[_352], CacheG[_352], CacheB[_352])) * 0.2734375) + ((uintBitsToFloat(uvec3(CacheR[_343], CacheG[_343], CacheB[_343])) + uintBitsToFloat(uvec3(CacheR[_361], CacheG[_361], CacheB[_361]))) * 0.21875)) + ((uintBitsToFloat(uvec3(CacheR[_334], CacheG[_334], CacheB[_334])) + uintBitsToFloat(uvec3(CacheR[_370], CacheG[_370], CacheB[_370]))) * 0.109375)) + ((uintBitsToFloat(uvec3(CacheR[_325], CacheG[_325], CacheB[_325])) + uintBitsToFloat(uvec3(CacheR[_379], CacheG[_379], CacheB[_379]))) * 0.03125)) + ((uintBitsToFloat(uvec3(CacheR[_316], CacheG[_316], CacheB[_316])) + uintBitsToFloat(uvec3(CacheR[_388], CacheG[_388], CacheB[_388]))) * 0.00390625)).xyzz);\n}\n\n",
                            "encode": "string",
                            "entryPoint": "main",
                            "shaderStage": "compute",
                            "shaderTarget": "gles30"
                        },
                        {
                            "data": "#include <metal_stdlib>\n#include <simd/simd.h>\n\nusing namespace metal;\n\nkernel void main0(texture2d<float> InputBuf [[texture(0)]], texture2d<float, access::write> Result [[texture(1)]], uint3 gl_WorkGroupID [[threadgroup_position_in_grid]], uint3 gl_LocalInvocationID [[thread_position_in_threadgroup]], uint3 gl_GlobalInvocationID [[thread_position_in_grid]])\n{\n    threadgroup uint CacheR[128];\n    threadgroup uint CacheG[128];\n    threadgroup uint CacheB[128];\n    uint _76 = gl_LocalInvocationID.y << 4u;\n    int _78 = int(gl_LocalInvocationID.x + _76);\n    uint _79 = uint(_78);\n    uint2 _80 = uint2(int2((gl_LocalInvocationID.xy << (uint2(1u) & uint2(31u))) + uint2(int2((gl_WorkGroupID.xy << (uint2(3u) & uint2(31u))) - uint2(4u)))));\n    float4 _82 = InputBuf.read(uint2(_80), 0u);\n    float4 _84 = InputBuf.read(uint2((_80 + uint2(1u, 0u))), 0u);\n    CacheR[_79] = as_type<uint>(half2(float2(_82.x, 0.0))) | (as_type<uint>(half2(float2(_84.x, 0.0))) << 16u);\n    CacheG[_79] = as_type<uint>(half2(float2(_82.y, 0.0))) | (as_type<uint>(half2(float2(_84.y, 0.0))) << 16u);\n    CacheB[_79] = as_type<uint>(half2(float2(_82.z, 0.0))) | (as_type<uint>(half2(float2(_84.z, 0.0))) << 16u);\n    uint _113 = uint(_78 + 8);\n    float4 _115 = InputBuf.read(uint2((_80 + uint2(0u, 1u))), 0u);\n    float4 _117 = InputBuf.read(uint2((_80 + uint2(1u))), 0u);\n    CacheR[_113] = as_type<uint>(half2(float2(_115.x, 0.0))) | (as_type<uint>(half2(float2(_117.x, 0.0))) << 16u);\n    CacheG[_113] = as_type<uint>(half2(float2(_115.y, 0.0))) | (as_type<uint>(half2(float2(_117.y, 0.0))) << 16u);\n    CacheB[_113] = as_type<uint>(half2(float2(_115.z, 0.0))) | (as_type<uint>(half2(float2(_117.z, 0.0))) << 16u);\n    threadgroup_barrier(mem_flags::mem_threadgroup);\n    uint _146 = _76 + (gl_LocalInvocationID.x << 1u);\n    uint _149 = (_76 + gl_LocalInvocationID.x) + (gl_LocalInvocationID.x & 4u);\n    uint _151 = CacheR[_149];\n    uint _153 = CacheG[_149];\n    uint _155 = CacheB[_149];\n    float3 _172 = float3(float2(as_type<half2>(_151 >> 16u)).x, float2(as_type<half2>(_153 >> 16u)).x, float2(as_type<half2>(_155 >> 16u)).x);\n    uint _173 = _149 + 1u;\n    uint _175 = CacheR[_173];\n    uint _177 = CacheG[_173];\n    uint _179 = CacheB[_173];\n    float3 _186 = float3(float2(as_type<half2>(_175)).x, float2(as_type<half2>(_177)).x, float2(as_type<half2>(_179)).x);\n    float3 _196 = float3(float2(as_type<half2>(_175 >> 16u)).x, float2(as_type<half2>(_177 >> 16u)).x, float2(as_type<half2>(_179 >> 16u)).x);\n    uint _197 = _149 + 2u;\n    uint _199 = CacheR[_197];\n    uint _201 = CacheG[_197];\n    uint _203 = CacheB[_197];\n    float3 _210 = float3(float2(as_type<half2>(_199)).x, float2(as_type<half2>(_201)).x, float2(as_type<half2>(_203)).x);\n    float3 _220 = float3(float2(as_type<half2>(_199 >> 16u)).x, float2(as_type<half2>(_201 >> 16u)).x, float2(as_type<half2>(_203 >> 16u)).x);\n    uint _221 = _149 + 3u;\n    uint _223 = CacheR[_221];\n    uint _225 = CacheG[_221];\n    uint _227 = CacheB[_221];\n    float3 _234 = float3(float2(as_type<half2>(_223)).x, float2(as_type<half2>(_225)).x, float2(as_type<half2>(_227)).x);\n    float3 _244 = float3(float2(as_type<half2>(_223 >> 16u)).x, float2(as_type<half2>(_225 >> 16u)).x, float2(as_type<half2>(_227 >> 16u)).x);\n    uint _245 = _149 + 4u;\n    uint _247 = CacheR[_245];\n    uint _249 = CacheG[_245];\n    uint _251 = CacheB[_245];\n    float3 _258 = float3(float2(as_type<half2>(_247)).x, float2(as_type<half2>(_249)).x, float2(as_type<half2>(_251)).x);\n    float3 _281 = ((((_210 * 0.2734375) + ((_196 + _220) * 0.21875)) + ((_186 + _234) * 0.109375)) + ((_172 + _244) * 0.03125)) + ((float3(float2(as_type<half2>(_151)).x, float2(as_type<half2>(_153)).x, float2(as_type<half2>(_155)).x) + _258) * 0.00390625);\n    CacheR[_146] = as_type<uint>(_281.x);\n    CacheG[_146] = as_type<uint>(_281.y);\n    CacheB[_146] = as_type<uint>(_281.z);\n    uint _291 = _146 + 1u;\n    float3 _304 = ((((_220 * 0.2734375) + ((_210 + _234) * 0.21875)) + ((_196 + _244) * 0.109375)) + ((_186 + _258) * 0.03125)) + ((_172 + float3(float2(as_type<half2>(_247 >> 16u)).x, float2(as_type<half2>(_249 >> 16u)).x, float2(as_type<half2>(_251 >> 16u)).x)) * 0.00390625);\n    CacheR[_291] = as_type<uint>(_304.x);\n    CacheG[_291] = as_type<uint>(_304.y);\n    CacheB[_291] = as_type<uint>(_304.z);\n    threadgroup_barrier(mem_flags::mem_threadgroup);\n    uint _316 = (gl_LocalInvocationID.y << 3u) + gl_LocalInvocationID.x;\n    uint _325 = _316 + 8u;\n    uint _334 = _316 + 16u;\n    uint _343 = _316 + 24u;\n    uint _352 = _316 + 32u;\n    uint _361 = _316 + 40u;\n    uint _370 = _316 + 48u;\n    uint _379 = _316 + 56u;\n    uint _388 = _316 + 64u;\n    Result.write((((((as_type<float3>(uint3(CacheR[_352], CacheG[_352], CacheB[_352])) * 0.2734375) + ((as_type<float3>(uint3(CacheR[_343], CacheG[_343], CacheB[_343])) + as_type<float3>(uint3(CacheR[_361], CacheG[_361], CacheB[_361]))) * 0.21875)) + ((as_type<float3>(uint3(CacheR[_334], CacheG[_334], CacheB[_334])) + as_type<float3>(uint3(CacheR[_370], CacheG[_370], CacheB[_370]))) * 0.109375)) + ((as_type<float3>(uint3(CacheR[_325], CacheG[_325], CacheB[_325])) + as_type<float3>(uint3(CacheR[_379], CacheG[_379], CacheB[_379]))) * 0.03125)) + ((as_type<float3>(uint3(CacheR[_316], CacheG[_316], CacheB[_316])) + as_type<float3>(uint3(CacheR[_388], CacheG[_388], CacheB[_388]))) * 0.00390625)).xyzz, uint2(gl_GlobalInvocationID.xy));\n}\n\n",
                            "encode": "string",
                            "entryPoint": "main",
                            "shaderStage": "compute",
                            "shaderTarget": "ios"
                        },
                        {
                            "data": "#include <metal_stdlib>\n#include <simd/simd.h>\n\nusing namespace metal;\n\nkernel void main0(texture2d<float> InputBuf [[texture(0)]], texture2d<float, access::write> Result [[texture(1)]], uint3 gl_WorkGroupID [[threadgroup_position_in_grid]], uint3 gl_LocalInvocationID [[thread_position_in_threadgroup]], uint3 gl_GlobalInvocationID [[thread_position_in_grid]])\n{\n    threadgroup uint CacheR[128];\n    threadgroup uint CacheG[128];\n    threadgroup uint CacheB[128];\n    uint _76 = gl_LocalInvocationID.y << 4u;\n    int _78 = int(gl_LocalInvocationID.x + _76);\n    uint _79 = uint(_78);\n    uint2 _80 = uint2(int2((gl_LocalInvocationID.xy << (uint2(1u) & uint2(31u))) + uint2(int2((gl_WorkGroupID.xy << (uint2(3u) & uint2(31u))) - uint2(4u)))));\n    float4 _82 = InputBuf.read(uint2(_80), 0u);\n    float4 _84 = InputBuf.read(uint2((_80 + uint2(1u, 0u))), 0u);\n    CacheR[_79] = as_type<uint>(half2(float2(_82.x, 0.0))) | (as_type<uint>(half2(float2(_84.x, 0.0))) << 16u);\n    CacheG[_79] = as_type<uint>(half2(float2(_82.y, 0.0))) | (as_type<uint>(half2(float2(_84.y, 0.0))) << 16u);\n    CacheB[_79] = as_type<uint>(half2(float2(_82.z, 0.0))) | (as_type<uint>(half2(float2(_84.z, 0.0))) << 16u);\n    uint _113 = uint(_78 + 8);\n    float4 _115 = InputBuf.read(uint2((_80 + uint2(0u, 1u))), 0u);\n    float4 _117 = InputBuf.read(uint2((_80 + uint2(1u))), 0u);\n    CacheR[_113] = as_type<uint>(half2(float2(_115.x, 0.0))) | (as_type<uint>(half2(float2(_117.x, 0.0))) << 16u);\n    CacheG[_113] = as_type<uint>(half2(float2(_115.y, 0.0))) | (as_type<uint>(half2(float2(_117.y, 0.0))) << 16u);\n    CacheB[_113] = as_type<uint>(half2(float2(_115.z, 0.0))) | (as_type<uint>(half2(float2(_117.z, 0.0))) << 16u);\n    threadgroup_barrier(mem_flags::mem_threadgroup);\n    uint _146 = _76 + (gl_LocalInvocationID.x << 1u);\n    uint _149 = (_76 + gl_LocalInvocationID.x) + (gl_LocalInvocationID.x & 4u);\n    uint _151 = CacheR[_149];\n    uint _153 = CacheG[_149];\n    uint _155 = CacheB[_149];\n    float3 _172 = float3(float2(as_type<half2>(_151 >> 16u)).x, float2(as_type<half2>(_153 >> 16u)).x, float2(as_type<half2>(_155 >> 16u)).x);\n    uint _173 = _149 + 1u;\n    uint _175 = CacheR[_173];\n    uint _177 = CacheG[_173];\n    uint _179 = CacheB[_173];\n    float3 _186 = float3(float2(as_type<half2>(_175)).x, float2(as_type<half2>(_177)).x, float2(as_type<half2>(_179)).x);\n    float3 _196 = float3(float2(as_type<half2>(_175 >> 16u)).x, float2(as_type<half2>(_177 >> 16u)).x, float2(as_type<half2>(_179 >> 16u)).x);\n    uint _197 = _149 + 2u;\n    uint _199 = CacheR[_197];\n    uint _201 = CacheG[_197];\n    uint _203 = CacheB[_197];\n    float3 _210 = float3(float2(as_type<half2>(_199)).x, float2(as_type<half2>(_201)).x, float2(as_type<half2>(_203)).x);\n    float3 _220 = float3(float2(as_type<half2>(_199 >> 16u)).x, float2(as_type<half2>(_201 >> 16u)).x, float2(as_type<half2>(_203 >> 16u)).x);\n    uint _221 = _149 + 3u;\n    uint _223 = CacheR[_221];\n    uint _225 = CacheG[_221];\n    uint _227 = CacheB[_221];\n    float3 _234 = float3(float2(as_type<half2>(_223)).x, float2(as_type<half2>(_225)).x, float2(as_type<half2>(_227)).x);\n    float3 _244 = float3(float2(as_type<half2>(_223 >> 16u)).x, float2(as_type<half2>(_225 >> 16u)).x, float2(as_type<half2>(_227 >> 16u)).x);\n    uint _245 = _149 + 4u;\n    uint _247 = CacheR[_245];\n    uint _249 = CacheG[_245];\n    uint _251 = CacheB[_245];\n    float3 _258 = float3(float2(as_type<half2>(_247)).x, float2(as_type<half2>(_249)).x, float2(as_type<half2>(_251)).x);\n    float3 _281 = ((((_210 * 0.2734375) + ((_196 + _220) * 0.21875)) + ((_186 + _234) * 0.109375)) + ((_172 + _244) * 0.03125)) + ((float3(float2(as_type<half2>(_151)).x, float2(as_type<half2>(_153)).x, float2(as_type<half2>(_155)).x) + _258) * 0.00390625);\n    CacheR[_146] = as_type<uint>(_281.x);\n    CacheG[_146] = as_type<uint>(_281.y);\n    CacheB[_146] = as_type<uint>(_281.z);\n    uint _291 = _146 + 1u;\n    float3 _304 = ((((_220 * 0.2734375) + ((_210 + _234) * 0.21875)) + ((_196 + _244) * 0.109375)) + ((_186 + _258) * 0.03125)) + ((_172 + float3(float2(as_type<half2>(_247 >> 16u)).x, float2(as_type<half2>(_249 >> 16u)).x, float2(as_type<half2>(_251 >> 16u)).x)) * 0.00390625);\n    CacheR[_291] = as_type<uint>(_304.x);\n    CacheG[_291] = as_type<uint>(_304.y);\n    CacheB[_291] = as_type<uint>(_304.z);\n    threadgroup_barrier(mem_flags::mem_threadgroup);\n    uint _316 = (gl_LocalInvocationID.y << 3u) + gl_LocalInvocationID.x;\n    uint _325 = _316 + 8u;\n    uint _334 = _316 + 16u;\n    uint _343 = _316 + 24u;\n    uint _352 = _316 + 32u;\n    uint _361 = _316 + 40u;\n    uint _370 = _316 + 48u;\n    uint _379 = _316 + 56u;\n    uint _388 = _316 + 64u;\n    Result.write((((((as_type<float3>(uint3(CacheR[_352], CacheG[_352], CacheB[_352])) * 0.2734375) + ((as_type<float3>(uint3(CacheR[_343], CacheG[_343], CacheB[_343])) + as_type<float3>(uint3(CacheR[_361], CacheG[_361], CacheB[_361]))) * 0.21875)) + ((as_type<float3>(uint3(CacheR[_334], CacheG[_334], CacheB[_334])) + as_type<float3>(uint3(CacheR[_370], CacheG[_370], CacheB[_370]))) * 0.109375)) + ((as_type<float3>(uint3(CacheR[_325], CacheG[_325], CacheB[_325])) + as_type<float3>(uint3(CacheR[_379], CacheG[_379], CacheB[_379]))) * 0.03125)) + ((as_type<float3>(uint3(CacheR[_316], CacheG[_316], CacheB[_316])) + as_type<float3>(uint3(CacheR[_388], CacheG[_388], CacheB[_388]))) * 0.00390625)).xyzz, uint2(gl_GlobalInvocationID.xy));\n}\n\n",
                            "encode": "string",
                            "entryPoint": "main",
                            "shaderStage": "compute",
                            "shaderTarget": "mac"
                        },
                        {
                            "data": "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",
                            "encode": "base64",
                            "entryPoint": "main",
                            "shaderStage": "compute",
                            "shaderTarget": "hlsl"
                        },
                        {
                            "data": "",
                            "encode": "base64",
                            "entryPoint": "main",
                            "shaderStage": "compute",
                            "shaderTarget": "vulkan"
                        }
                    ],
                    "state": {
                        "alphaToMask": {
                            "ref": "",
                            "val": 0
                        },
                        "blendOp": {
                            "ref": "",
                            "val": 0
                        },
                        "blendOpAlpha": {
                            "ref": "",
                            "val": 0
                        },
                        "colMask": {
                            "ref": "",
                            "val": 15
                        },
                        "culling": {
                            "ref": "",
                            "val": 2
                        },
                        "destBlend": {
                            "ref": "",
                            "val": 0
                        },
                        "destBlendAlpha": {
                            "ref": "",
                            "val": 0
                        },
                        "lod": 0,
                        "name": "",
                        "offsetFactor": {
                            "ref": "",
                            "val": 0
                        },
                        "offsetUnits": {
                            "ref": "",
                            "val": 0
                        },
                        "srcBlend": {
                            "ref": "",
                            "val": 1
                        },
                        "srcBlendAlpha": {
                            "ref": "",
                            "val": 1
                        },
                        "stencilOp": {
                            "comp": {
                                "ref": "",
                                "val": 8
                            },
                            "fail": {
                                "ref": "",
                                "val": 0
                            },
                            "pass": {
                                "ref": "",
                                "val": 0
                            },
                            "zFail": {
                                "ref": "",
                                "val": 0
                            }
                        },
                        "stencilOpBack": {
                            "comp": {
                                "ref": "",
                                "val": 8
                            },
                            "fail": {
                                "ref": "",
                                "val": 0
                            },
                            "pass": {
                                "ref": "",
                                "val": 0
                            },
                            "zFail": {
                                "ref": "",
                                "val": 0
                            }
                        },
                        "stencilOpFront": {
                            "comp": {
                                "ref": "",
                                "val": 8
                            },
                            "fail": {
                                "ref": "",
                                "val": 0
                            },
                            "pass": {
                                "ref": "",
                                "val": 0
                            },
                            "zFail": {
                                "ref": "",
                                "val": 0
                            }
                        },
                        "stencilReadMask": {
                            "ref": "",
                            "val": 255
                        },
                        "stencilRef": {
                            "ref": "",
                            "val": 0
                        },
                        "stencilWriteMask": {
                            "ref": "",
                            "val": 255
                        },
                        "tags": {
                            "IgnoreProjector": "True",
                            "Queue": "Transparent",
                            "RenderType": "Transparent"
                        },
                        "zTest": {
                            "ref": "",
                            "val": 4
                        },
                        "zWrite": {
                            "ref": "",
                            "val": 1
                        }
                    },
                    "type": "compiledPass"
                }
            ],
            "tags": {
                "IgnoreProjector": "True",
                "Queue": "Transparent",
                "RenderType": "Transparent"
            }
        }
    ]
}